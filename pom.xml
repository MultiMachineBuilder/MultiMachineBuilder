<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	 
	<!-- GAV coordinates -->
	<groupId>io.github.multimachinebuilder</groupId>
	<artifactId>multimachinebuilder</artifactId>
	<version>0.6</version>
  
	<!-- About -->
	<name>Multi Machine Builder</name>
	<licenses>
	 <license>
	   <name>GNU General Public License v3</name>
	   <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
	 </license>
	</licenses>
	<developers>
	    <developer>
	      <name>Monniasza</name>
	      <email>monniasza@onet.pl</email>
	      <organization>MultiMachineBuilder team</organization>
	      <organizationUrl>https://github.com/MultiMachineBuilder</organizationUrl>
	    </developer>
	 </developers>
	<url>https://multimachinebuilder.github.io</url>
	<inceptionYear>16 Oct 2020</inceptionYear>
	<organization>
		<name>MultiMachineBuilder</name>
		<url>https://github.com/MultiMachineBuilder</url>
	</organization>
	
	<!-- Development information -->
	<distributionManagement>
		<snapshotRepository>
    		<id>ossrh</id>
    		<name>Central Repository OSSRH</name>
    		<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
  		</snapshotRepository>
  		<repository>
            <id>ossrh</id>
            <name>Central Repository OSSRH</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
	</distributionManagement>
	<scm>
		<url>https://github.com/MultiMachineBuilder/MultiMachineBuilder</url>
		<connection>scm:git:https://github.com/MultiMachineBuilder/MultiMachineBuilder</connection>
		<developerConnection>scm:git:https://github.com/MultiMachineBuilder/MultiMachineBuilder</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/MultiMachineBuilder/MultiMachineBuilder/issues</url>
	</issueManagement>
	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/MultiMachineBuilder/MultiMachineBuilder/actions</url>
	</ciManagement>
	
	<!-- Build params -->
	<packaging>jar</packaging>
	<repositories>
		<repository>
		    <id>ossrh</id>
		    <name>Maven Central</name>
		    <url>https://repo.maven.apache.org/maven2/</url>
		</repository>
		<repository>
			<id>jcenter</id>
			<name>jcenter</name>
			<url>https://jcenter.bintray.com</url>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
		<repository>
		    <id>gitlab-maven</id>
		    <url>https://gitlab.com/api/v4/projects/19871573/packages/maven</url>
		</repository>
	</repositories>
	<build>
		<!-- Source params -->
		<sourceDirectory>${project.basedir}/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>
		
		<!-- Output params -->
		<resources>
		  <resource>
		    <directory>${project.basedir}/src</directory>
		    <excludes>
				<exclude>**/*.java</exclude>
		    </excludes>
		  </resource>
		</resources>
		<testResources>
            <testResource>
                <directory>${project.basedir}/test</directory>
                <excludes>
					<exclude>**/*.java</exclude>
		    	</excludes>
            </testResource>
        </testResources>
		
		<!-- Plugins -->
		<plugins>
			<!-- Maven compiler -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			
			<!-- Surefire -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- JUnit 5 requires Surefire version 3.5.0 or higher -->
				<version>3.5.0</version>
	 		</plugin>
	 		
	 		<!-- JAR assembler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.7.1</version>
				
				<!-- Configuration -->
				<configuration>
					<!-- outputDirectory>${project.basedir}/release</outputDirectory -->
					<archive>
						<manifest>
							<mainClass>mmb.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					
					<!-- Keep the filename nice and tidy -->
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				
				<!-- Execution policy -->
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
			    </executions>
			</plugin>
			
	 		<!-- Javadoc -->
	 		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.10.0</version>
				<configuration>
					<forceCreation>true</forceCreation>
					<failOnError>false</failOnError>
					<doclint>none</doclint>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
		    </plugin>   
		    
		    <!-- Source attachment -->
		    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<forceCreation>true</forceCreation>
				</configuration>
				<executions>
	                <execution>
	                    <id>attach-sources</id>
	                    <phase>package</phase>
	                    <inherited>true</inherited>
	                    <goals>
	                        <goal>jar-no-fork</goal>
	                        <goal>test-jar-no-fork</goal>
	                    </goals>
	                </execution>
	            </executions>
		    </plugin>
		    
		    <!-- Ant packaging of complete game -->
		    <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>3.1.0</version>
			    <executions>
			        <execution>
			            <id>gamedir</id>
			            <phase>package</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
			                <target>
			                    <mkdir dir="${mmb.packingdir}/mods"/>
			                    <mkdir dir="${mmb.packingdir}/maps"/>
			                    <copy todir = "${mmb.packingdir}/natives">
									<fileset dir="${basedir}/natives"/>
								</copy>
								<copy todir = "${mmb.packingdir}/sound">
									<fileset dir="${basedir}/sound"/>
								</copy>
								<copy todir = "${mmb.packingdir}/textures">
									<fileset dir="${basedir}/textures"/>
								</copy>
								<copy todir="${mmb.packingdir}/">
								    <fileset dir="${project.build.directory}">
								        <include name="multimachinebuilder*.jar"/>
								    </fileset>
								</copy>
								<echo message="" file="${mmb.packingdir}/log.txt"/>
								<echo message="" file="${mmb.packingdir}/ext.txt"/>
								<echo message="" file="${mmb.packingdir}/settings.properties"/>
								<echo file="${mmb.packingdir}/MultiMachineBuilder.sh">
									#!/bin/bash
									java -jar ${mmb.jarfile} $@
								</echo>
								<echo message="javaw ${mmb.jarfile} $@" file="${mmb.packingdir}/MultiMachineBuilder.bat"/>
								<zip destfile="${project.build.directory}/MultiMachineBuilder ${version} Ready2Go.zip" basedir="${mmb.packingdir}"/>
			                </target>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
	  </plugins>
	</build>
	<profiles>
	    <profile>
	    	<!-- GitHub Actions profile -->
	        <id>actions</id>
	        <build>
	        	<plugins>
	        		<!-- SonarCloud scan -->
	        		<plugin>
				        <groupId>org.sonarsource.scanner.maven</groupId>
				        <artifactId>sonar-maven-plugin</artifactId>
				        <version>4.0.0.4121</version>
				        <executions>
				        	<execution>
				        		<id>sonarscan</id>
				        		<phase>test</phase>
				        		<goals>
				        			<goal>sonar</goal>
				        		</goals>
				        	</execution>
				        </executions>
				        
			        </plugin>
	        		
	        		<!-- PGP signature -->
				    <plugin>
		                  <groupId>org.apache.maven.plugins</groupId>
		                  <artifactId>maven-gpg-plugin</artifactId>
		                  <version>3.2.5</version>
		                  <executions>
		                      <execution>
		                          <id>sign-artifacts</id>
		                          <phase>verify</phase>
		                          <goals>
		                              <goal>sign</goal>
		                          </goals>
		                          <configuration>
		                              <!-- Prevent gpg from using pinentry programs. Fixes: gpg: signing 
		                                  failed: Inappropriate ioctl for device -->
		                              <gpgArguments>
		                                  <arg>--pinentry-mode</arg>
		                                  <arg>loopback</arg>
		                              </gpgArguments>
		                          </configuration>
		                      </execution>
		                  </executions>
		              </plugin>
				    
				    <!-- Maven Central staging -->
					<plugin>
			      		<groupId>org.sonatype.plugins</groupId>
			      		<artifactId>nexus-staging-maven-plugin</artifactId>
			      		<version>1.7.0</version>
			      		<extensions>true</extensions>
			      		<configuration>
			        		<serverId>ossrh</serverId>
			        		<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
			        		<autoReleaseAfterClose>false</autoReleaseAfterClose>
			      		</configuration>
			    	</plugin>
			    	
			    	<!-- GitHub Artifact -->
	        	</plugins>
	        </build>
	    </profile>
	</profiles>
	<properties>
		<mmb.packingdir>${project.build.directory}/MultiMachineBuilder</mmb.packingdir>
		<mmb.jarfile>multimachinebuilder-${version}.jar</mmb.jarfile>
		<!-- LWJGL -->
		<lwjgl.version>3.3.1</lwjgl.version>
		<joml.version>1.10.5</joml.version>
		<lwjgl.natives>natives-windows</lwjgl.natives>
		
		<!-- Sonar scanner -->
		<sonar.projectKey>MultiMachineBuilder_MultiMachineBuilder</sonar.projectKey>
		<sonar.organization>multimachinebuilder</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.sources>src,pom.xml</sonar.sources>
		<sonar.tests>test</sonar.tests>
		<sonar.java.binaries>target</sonar.java.binaries>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		
		<!-- Eclipse External Annotations -->
		<m2e.eea.annotationpath.jre>/Multi Machine Builder/lib/eclipse-null-eea-augments-2.4.0/libraries/java</m2e.eea.annotationpath.jre>
		<m2e.eea.annotationpath.maven>/Multi Machine Builder/lib/eclipse-null-eea-augments-2.4.0/libraries/other</m2e.eea.annotationpath.maven>
	</properties>
	<dependencies>		
		<!-- Fuzzing -->
		<dependency>
		    <groupId>com.code-intelligence</groupId>
		    <artifactId>jazzer-junit</artifactId>
		    <version>0.22.1</version>
		    <scope>test</scope>
		    
		</dependency>
	
		<!-- Null analysis -->
		<dependency>
		  <groupId>org.lastnpe.eea</groupId>
		  <artifactId>eea-all</artifactId>
		  <version>2.4.0</version>
		</dependency>
		
		<!-- Collections -->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>1.5.2</version>
	    </dependency>
		<dependency>
		  <groupId>it.unimi.dsi</groupId>
		  <artifactId>fastutil</artifactId>
		  <version>8.5.14</version>
		</dependency>
		<dependency>
		  <groupId>com.github.davidmoten</groupId>
		  <artifactId>rtree2</artifactId>
		  <version>0.9.3</version>
		</dependency>   
		
		<!-- UI libraries -->
		<dependency>
		    <groupId>io.github.krlvm</groupId>
		    <artifactId>swingdpi</artifactId>
		    <version>1.2</version>
		</dependency>
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout-swing</artifactId>
			<version>11.4.2</version>
		</dependency>
		<dependency>
	   		<groupId>io.github.parubok</groupId>
	   		<artifactId>multiline-label</artifactId>
	   		<version>1.20</version>
		</dependency>
		
		<!-- Audio -->
		<dependency>
		    <groupId>com.github.trilarion</groupId>
		    <artifactId>java-vorbis-support</artifactId>
		    <version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>fr.delthas</groupId>
			<artifactId>javamp3</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>javazoom</groupId>
			<artifactId>jlayer</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
		    <groupId>com.googlecode.soundlibs</groupId>
		    <artifactId>tritonus-share</artifactId>
		    <version>0.3.7.4</version>
		</dependency>
	   	
	   	<!-- General purpose -->
		<dependency>
		  <groupId>com.rainerhahnekamp</groupId>
		  <artifactId>sneakythrow</artifactId>
		  <version>1.2.0</version>
		</dependency>
		<dependency>
	 		<groupId>com.google.guava</groupId>
	 		<artifactId>guava</artifactId>
	 		<version>33.3.0-jre</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>failureaccess</artifactId>
		    <version>1.0.2</version>
		</dependency>
		<dependency>
	      <groupId>org.ainslec</groupId>
	      <artifactId>picocog</artifactId>
	      <version>1.0.7</version>
	   </dependency>
		<dependency>
		  <groupId>io.vavr</groupId>
		  <artifactId>vavr</artifactId>
		  <version>1.0.0-alpha-4</version>
		</dependency>
		
		<!-- JSON -->
		<dependency>
	 		<groupId>com.fasterxml.jackson.core</groupId>
	 		<artifactId>jackson-databind</artifactId>
	 		<version>2.17.2</version>
		</dependency>
		<dependency>
		  	<groupId>com.fasterxml.jackson.core</groupId>
		  	<artifactId>jackson-core</artifactId>
		  	<version>2.17.2</version>
		</dependency>
		<dependency>
		  	<groupId>com.fasterxml.jackson.core</groupId>
		  	<artifactId>jackson-annotations</artifactId>
		  	<version>2.17.2</version>
		</dependency>
		
		<!-- Apache Commons -->
		<dependency>
	 		<groupId>org.apache.commons</groupId>
	 		<artifactId>commons-lang3</artifactId>
	 		<version>3.17.0</version>
		</dependency>
		<dependency>
	 		<groupId>org.apache.commons</groupId>
	 		<artifactId>commons-compress</artifactId>
	 		<version>1.27.1</version>
		</dependency>
		<dependency>
	  		<groupId>commons-io</groupId>
	  		<artifactId>commons-io</artifactId>
	  		<version>2.16.1</version>
		</dependency>
		<dependency>
	 		<groupId>org.apache.commons</groupId>
	 		<artifactId>commons-csv</artifactId>
	 		<version>1.11.0</version>
		</dependency>
	    <dependency>
	        <groupId>com.github.Fylipp</groupId>
	        <artifactId>easy-events</artifactId>
	        <version>v1.1.0</version>
	    </dependency>
		
		
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.11.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>5.11.0</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-api</artifactId>
	        <version>5.11.0</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-commons</artifactId>
		    <version>1.11.0</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- LWJGL -->
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-glfw</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-opengl</artifactId>
			<version>3.3.2</version>
		</dependency>
		
		<!-- LWJGL natives -->
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl</artifactId>
			<classifier>${lwjgl.natives}</classifier>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-glfw</artifactId>
			<classifier>${lwjgl.natives}</classifier>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-opengl</artifactId>
			<classifier>${lwjgl.natives}</classifier>
			<version>3.3.2</version>
		</dependency>

		<!-- JOML -->
		<dependency>
			<groupId>org.joml</groupId>
			<artifactId>joml</artifactId>
			<version>1.10.8</version>
		</dependency>
		
		<!-- Others -->
		<dependency>
			<groupId>io.github.micwan88</groupId>
			<artifactId>helperclass4j</artifactId>
			<version>2.0.1</version>
		</dependency>
	</dependencies>
	<description>Dependency for the MultiMachineBuilder, a voxel game about building an industrial empire in a finite world.

THIS RELEASE IS NOT PLAYABLE. To play the game, donwload from &gt;ITCH.IO LINK HERE&lt; or &gt;GH releases link here&lt;</description>
</project>
