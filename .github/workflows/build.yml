##Unified build pipeline

name: Build
on:
  push:
    branches:
      - master
      - issue-*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            java-version: 17
            server-id: ossrh
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            server-username: MAVEN_USERNAME
            server-password: MAVEN_PASSWORD
            gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
            gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Provide Maven credentials
        uses: InstaCode/maven-settings-xml-action@v9
        with:
         servers: '[{"id": "ossrh", "username": "${{ secrets.OSSRH_USERNAME }}", "password": "${{ secrets.OSSRH_TOKEN }}"}]'
      - name: Build and analyze
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn --batch-mode clean deploy -P actions
      - name: Upload the jars
        uses: actions/upload-artifact@v4
        with:
          name: Sources
          path: target/multimachinebuilder-*.jar
      - name: Upload the ready2go zip
        uses: actions/upload-artifact@v4
        with:
          name: Ready2Go
          path: target/MultiMachineBuilder * Ready2Go.zip
